#+TITLE: Virtual network (Part II): DNS 
#+AUTHOR: Sebastian Meisel

:HTML_PROPERTIES:
#+OPTIONS: num:nil toc:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="mystyle.css" />
:END:

#+ATTR_HTML: :width 100% :alt The Ostseepinguin banner showing a baltic penguin on the beach.
#+ATTR_LATEX: :width .65\linewidth
#+ATTR_ORG: :width 700
[[file:img/Ostseepinguin.png]]


#+begin_menu
[[file:NetworkNamespaceDNS.DE.org][ðŸ‡©ðŸ‡ª DE]]
- > [[file:index.org][Home]]
- > [[file:NetworkNamespace.org][Part I]]
- > [[file:NetworkNamespaceDNS.org][Part II]]
--------
#+ATTR_HTML: :width 16px :alt Mastodon
#+ATTR_LATEX: :width .65\linewidth
#+ATTR_ORG: :width 20
[[file:img/Mastodon.png]] https://emacs.ch/@SebasTEAan

ðŸ“§ [[mailto:sebastian.meisel+ostseepinguin@gmail.com][sebastian.meisel at gmail.com]]
#+end_menu

#+NAME: toggle-mode-script
#+BEGIN_EXPORT HTML
<input type="checkbox" id="darkmode-toggle">
<label for="darkmode-toggle"></label></input>
<script src="script.js"></script>
#+END_EXPORT


* Adding a SMTP-Server (Exim4)
:PROPERTIES:
:header-args:bash: :shebang #!/bin/bash  :eval never :session OVS :exports code
:header-args:mermaid: :tangle nil :results file :exports results :eval t
:header-args:javascript: :tangle script.js :exports none :eval never
:header-args:css: :tangle mystyle.css :exports none :eval never
:header-args:config: :exports both :eval never
:END:


In the [[file:NetworkNamespace.org][first part]] we created a little switched network between three virtual devices, each of which we placed in it's own namespace (~red~, ~green~ and ~blue~). We connect them with an (Open) Virtual Switch with three ports (~veth-r~, ~veth-g~ and ~veth-b~). The whole toology looks like this:

#+CAPTION: Network Diagram 
#+NAME: fig:netdiag
#+ATTR_HTML: :width 50% :alt Network Diagram showing the relationship between the namespaces as described in the paragraph above.
#+ATTR_LATEX: :width .65\linewidth
#+ATTR_ORG: :width 700
[[file:img/ovs-net.png]]

In the [[file:NetworkNamespaceDNS.org][second part]] we added DNS with ~Bind~. That's a prerequisite for the next step: adding a SMTP-Server.

** Installing Exim4

For this we have to choose a Mail Transfer Agent (~MTA~) to install. There are three main options:

1) [[https://www.proofpoint.com/us/products/email-protection/open-source-email-solution][Sendmail]].
2) [[http://www.postfix.org/][Postfix]]
3) [[https://www.exim.org/][Exim]]

In this blog post I will use option number 3 - mainly because I have not previously set it up and want to know, how it works.

If there already exists another ~MTA~ you might need to first uninstall it.

#+BEGIN_SRC bash :eval never-export :tangle no :async :results file :file install.log :dir /sudo::/ :session sudo
if [ -f /etc/os-release ]; then
  . /etc/os-release
else
  echo "Cannot determine the Linux distribution."
  exit 1
fi

case ${ID_LIKE%% *} in
  debian|ubuntu)
    apt install -y exim4
    ;;
  fedora|rhel|centos)
    yum install -y exim
    ;;
  suse|opensuse)
    zypper install -y exim 
    ;;
  arch)
    pacman -Syu exim
    ;;
  ,*)
      echo "Unsupported distribution."
      exit 1
    ;;
esac
if  [[ $ID == arch ]]; then
    pacman -Syu exim
else
	  echo "Unsupported distribution."
	  exit 1
fi
#+END_SRC

#+RESULTS:
[[file:/sudo:root@suse:/install.log]]


** Creating a configuration in the ~red~ namespace.

We want to put the mail server in the ~red~ namespace. For this we need a configuration directory for ~Exim~ in the configuration directory:

#+BEGIN_SRC bash :dir /sudo::/ :session sudo  :eval never-export 
mkdir -p /etc/netns/green/exim/
#+END_SRC

*** Creating the configuration file for exim

We now copy the standard configuration file for ~Exim~ to this directory.

#+BEGIN_SRC bash :dir /sudo::/ :session sudo  :eval never-export 
cp /etc/exim/exim.conf /etc/netns/green/exim
#+END_SRC

*** Settings

We now need to change a few settings:

1) We need to set the domain name, for which we accept emails:

#+BEGIN_SRC bash :dir /sudo::/ :session sudo  :eval never-export :results verbatim
sed -i '/local_domains/s|@|col.or|' /etc/netns/red/exim/exim.conf
#+END_SRC

#+RESULTS:


2) We need to set from which clients we accept emails to relay.

#+BEGIN_SRC bash :dir /sudo::/ :session sudo  :eval never-export :results verbatim
sed -i '/relay_from_hosts/s|localhost|<; 127.0.0.0/8 ; ::1 ; 10.0.0.0/29|' /etc/netns/red/exim/exim.conf
#+END_SRC

#+RESULTS:

** Adding MX record to zone file

Next we want to add a ~MX~ record to the zone file for the ~DNS~ server in the ~blue~ namespace.
Before that we need to add a ~CNAME~ record so that =smtp.col.or= points to =red.col.or=.

#+BEGIN_SRC bash :dir /sudo::/ :session sudo  :eval never-export :results verbatim
sed -i '$a smtp   IN      CNAME   green.col.or.'  /etc/netns/blue/bind/zones/db.col.or
sed -i '$a \\n@      IN      MX      green.col.or.'  /etc/netns/blue/bind/zones/db.col.or
#+END_SRC

#+RESULTS:

** (Re)generate virtual net

Now it's time to (re)generate the virtual network from the first part. For that we need to source ovssetup.sh and ovs.sh.

#+BEGIN_SRC bash :dir /sudo::/ :session sudo  :eval never-export :results verbatim
script_dir="$(dirname $(find /home/ -type f -name db.col.or))/files"
. ${script_dir}/ovs_setup.sh
. ${script_dir}/ovs.sh
. ${script_dir}/ovs_named.sh
#+END_SRC




* Acknowledgment

Most of what I have done in this part builds on [[https://ba1ajinaidu.hashnode.dev/how-to-configure-bind-as-a-private-network-dns-server-on-linux-network-namespaces][Balajinaidu's Blog]] on this topic. 


* Footnotes

[fn:1] *Domaine Name Service:* associates a full qualified domain name like =www.kernel.org= with an IP address.

# Local Variables:
# jinx-languages: "en_US"
# End:
