#+TITLE: IPv6PrefixDelegation for Virtual Machine Manager with Open vSwitch
#+AUTHOR: Sebastian Meisel
#+DATE: <2025-06-18 Mi>
:HTML_PROPERTIES:
#+OPTIONS: num:nil toc:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="mystyle.css" />
:END:

#+ATTR_HTML: :width 100% :alt The Ostseepinguin banner showing a baltic penguin on the beach.
#+ATTR_LATEX: :width .65\linewidth
#+ATTR_ORG: :width 700
[[file:img/Ostseepinguin.png]]


#+NAME: toggle-mode-script
#+BEGIN_EXPORT HTML
<input type="checkbox" id="darkmode-toggle">
<label for="darkmode-toggle"></label></input>
<script src="script.js"></script>
#+END_EXPORT

#+begin_menu
[[file:IPv6Prefix_virtmanager_DE.html][ðŸ‡©ðŸ‡ª DE]]
- > [[file:index.html][Home]]

--------
#+ATTR_HTML: :width 16px :alt Mastodon
#+ATTR_LATEX: :width .65\linewidth
#+ATTR_ORG: :width 20
[[file:img/Mastodon.png]] https://emacs.ch/@SebasTEAan

ðŸ“§ [[mailto:sebastian.meisel+ostseepinguin@gmail.com][sebastian.meisel at gmail.com]]
#+end_menu

* Introduction

After I setup [[file:IPv6PrefixDelegation.html][IPv6 Prefix Delegation (~PD~) on my Linux router]] I realized, that I still need an ~IPv6~ subnet for the virtual machines (~VMs~), I run on my Desktop PC.

For ~IPv6~ I want to use bridged network, but on the other hand, I do not actually want my ~VMs~ in my Office ~VLAN~. So I decided to create a third ~VLAN~ just for my ~VMs~. The whole setup in the end shall work like this:

#+ATTR_HTML: :width 50%
#+ATTR_LATEX: :width .65\linewidth :placement [!htpb]
#+ATTR_ORG: :width 700
[[file:img/IPv6Network_virtmanager.png]]

* Add new VLAN on the Switch

#+ATTR_HTML: :width 50%
#+ATTR_LATEX: :width .65\linewidth :placement [!htpb]
#+ATTR_ORG: :width 700
[[file:img/Switch_VLAN30.png]]

ATTR_HTML: :width 50%
#+ATTR_LATEX: :width .65\linewidth :placement [!htpb]
#+ATTR_ORG: :width 700
[[file:img/Switch_VLANPorts.png]]


* Add new VLAN on the Router

#+BEGIN_SRC text
[Match]
Name=eth0
Type=ether

[Network]
Description=Outbound Ethernet port

DHCP=ipv6
IPv6AcceptRA=yes

VLAN=Office
VLAN=WLAN
VLAN=VMs

[Address]
Address=192.168.178.254/24

[IPv6AcceptRA]
Token=::1

[DHCPv6]
PrefixDelegationHint=::/62
UseDelegatedPrefix=yes

[Route]
Gateway=192.168.178.1
#+END_SRC

#+BEGIN_SRC text
[NetDev]
Name=VMs
Kind=vlan

[VLAN]
Id=30
#+END_SRC

#+BEGIN_SRC text
[Match]
Name=VMs
Type=vlan

[Network]
Description=VMs VLAN interface
DHCP=ipv6
IPv6SendRA=yes
IPv6AcceptRA=no
DHCPPrefixDelegation=yes

[Address]
Address=172.16.30.1/24

[DHCPPrefixDelegation]
Token=::1
SubnetId=0x2
#+END_SRC


* Configure Host
** Configure networkd

As before I first have to configure the physical Ethernet interface. For this I create the file ~/etc/systemd/network/10-enp0s16f0u1~. In the section ~[Match]~ I match the type ~ether~, but instead of the device name, this time I opted to match the ~MACAddress~:

#+BEGIN_SRC text :tangle files/10-eth0.network_suse
  [Match]
  MACAddress=d8:bb:c1:8b:b9:d1
  Type=ether
  
#+END_SRC

The section ~[Network]~ starts with deliberate description:
#+BEGIN_SRC text :tangle files/10-eth0.network_suse
  [Network]
  Description=Physical Ethernet Port
#+END_SRC

 - DHCP=yes : :: I want to use ~DHCP~ for both ~IPv6~ and legacy ~IPv4~.
 - IPv6AcceptRA=yes : :: For ~IPv6~ we need to accept Router Advertisments (~RA~).
 - IPForward=yes : :: We also need to be sure IP forwarding is activated.


#+BEGIN_SRC text :tangle files/10-eth0.network
  DHCP=yes
  IPv6AcceptRA=yes
  IPForward=yes
#+END_SRC

Here is also the place to include the ~VLANs~ which are connected to that deviceÂ â€” in this case:

 1) ~Office~ for the host and
 2) ~VM~ for the virtual machines.

#+BEGIN_SRC text :tangle files/10-eth0.network
  VLAN=Office
  VLAN=VM
#+END_SRC


** VLAN 10: Host network


#+NAME: 30-vlan10.netdev
#+BEGIN_SRC conf :tangle /etc/systemd/network/30-vlan10.netdev
[NetDev]
Name=Office
Kind=vlan

[VLAN]
Id=10
#+END_SRC

#+NAME: 40-vlan10.network
#+BEGIN_SRC conf :tangle /etc/systemd/network/40-vlan10.network
[Match]
Name=vlan10

[Network]
DHCP=yes
#+END_SRC


** VLAN 30: Bridge for VMs
#+NAME: 50-vlan20.netdev
#+BEGIN_SRC conf :tangle /etc/systemd/network/50-vlan20.netdev
[NetDev]
Name=VM
Kind=vlan

[VLAN]
Id=30
#+END_SRC

** Bridge device (br20)
#+NAME: 60-br20.netdev
#+BEGIN_SRC conf :tangle /etc/systemd/network/60-br20.netdev
[NetDev]
Name=br20
Kind=bridge
#+END_SRC

** Attach VLAN 20 to the bridge
#+NAME: 70-vlan20.network
#+BEGIN_SRC conf :tangle /etc/systemd/network/70-vlan20.network
[Match]
Name=vlan20

[Network]
Bridge=br20
#+END_SRC

** Bridge interface configuration
#+NAME: 80-br20.network
#+BEGIN_SRC conf :tangle /etc/systemd/network/80-br20.network
[Match]
Name=br20

[Network]
# no IP configuration unless needed
#+END_SRC

* Virtual Machine Configuration
Connect your VM interfaces to ~br20~ using `virt-manager` or XML. Example in libvirt XML:

#+BEGIN_SRC xml
<interface type='bridge'>
  <source bridge='br20'/>
  <model type='virtio'/>
</interface>
#+END_SRC

* Notes
#+BEGIN_NOTES
- If `libvirt` tries to manage the bridge itself (e.g. ~virbr0~), disable its autostart bridge and use your own.
- You can test VLAN tagging with ~tcpdump -i eth0 vlan~.
- Avoid overlapping IP subnets between VLAN 10 and VLAN 20.

#+END_NOTES

# Local Variables:
# jinx-languages: "en_US"
# End:
